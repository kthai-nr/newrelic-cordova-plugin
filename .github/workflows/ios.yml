
name: iOS Testsuite

on:
  push:
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.eslint*'
  pull_request:
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.eslint*'

jobs:
  test:
    name: iOS ${{ matrix.versions.ios-version }} Test
    runs-on: ${{ matrix.versions.os-version }}
    continue-on-error: true

    # hoist configurations to top that are expected to be updated
    env:
      # Storing a copy of the repo
      repo: ${{ github.event.pull_request.head.repo.full_name || github.repository }}

      node-version: 16

      # > Starting April 26, 2021, all iOS and iPadOS apps submitted to the App Store must be built with Xcode 12 and the iOS 14 SDK.
      # Because of Apple's requirement, listed above, We will only be using the latest Xcode release for testing.
      # To customize these options, add "xcode-version" to the strategy matrix with its overriding value.
      default_xcode-version: latest-stable

    strategy:
      matrix:
        versions:
          - os-version: macos-latest
            ios-version: 16.x
            xcode-version: latest-stable

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
      - uses: maxim-lobanov/setup-xcode@v1
        env:
          xcode-version: ${{ matrix.versions.xcode-version == '' && env.default_xcode-version || matrix.versions.xcode-version }}
        with:
          xcode-version: ${{ env.xcode-version }}

      - name: Run Environment Information
        run: |
          node --version
          npm --version
          xcodebuild -version
      - name: Run npm install
        run: |
          npm i -g cordova@latest ios-deploy@latest
          npm i
          npm ci
      - name: Run paramedic install
        if: ${{ endswith(env.repo, '/cordova-paramedic') != true }}
        run: npm i -g github:apache/cordova-paramedic
      - name: Debug simctl devices
        run: |
          xcrun simctl list devices available
      - name: Run paramedic tests
        env:
          test_config: 'ios-${{ matrix.versions.ios-version }}.config.json'
          test_plugin_path: ${{ endswith(env.repo, '/cordova-paramedic') && './spec/testable-plugin/' || './' }}
          paramedic: ${{ endswith(env.repo, '/cordova-paramedic') && 'node main.js' || 'cordova-paramedic' }}
        run: |
          SIMULATOR_DEVICE=$(xcrun simctl list devices available | grep -m 1 -o 'iPhone [^\(]*(.*${{ matrix.versions.ios-version }}.*' | sed 's/^[[:space:]]*//')
          echo "Selected simulator: $SIMULATOR_DEVICE"
          ${{ env.paramedic }} --config ./pr/local/${{ env.test_config }} --plugin ${{ env.test_plugin_path }} --target "$SIMULATOR_DEVICE"